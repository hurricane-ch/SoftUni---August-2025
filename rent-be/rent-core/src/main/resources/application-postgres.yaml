spring:
  datasource:
    url: 'jdbc:postgresql://localhost:5432/rent' #?currentSchema=rent'
    username: admin
    password: admin
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000 #maximum number of milliseconds that a client will wait for a connection
      minimum-idle: 3 #minimum number of idle connections maintained by HikariCP in a connection pool
      maximum-pool-size: 10 #maximum pool size
      idle-timeout: 15000 #maximum idle time for connection
      max-lifetime: 1000 # maximum lifetime in milliseconds of a connection in the pool after it is closed.
      auto-commit: true #default auto-commit behavior.
  jpa:
    database: postgresql
    hibernate:
#      use-new-id-generator-mappings: true
      ddl-auto: update #none, validate, update, create, create-drop
    properties:
      javax.persistence.create-database-schemas: true
      hibernate:
        default_schema: rentch
        show_sql: true
#        dialect: org.hibernate.dialect.PostgreSQL10Dialect #net.optionfactory.hj.postgres.PostgreSQL95DialectWithJsonb
      org.hibernate.envers:
        default_schema: aud
#        audit_table_suffix: _aud
    show-sql: true
    open-in-view: false
    defer-datasource-initialization: false #2nd step to run db/schema.sql, db/data.sql scripts (to enable set the create-database-schemas to false)
  h2:
    console:
      enabled: false
  sql:
    init:
      encoding: UTF-8
      mode: always
      schema-locations: 'classpath:db/schema.sql'
      data-locations: 'classpath:db/data.sql'
      continue-on-error: true
  liquibase:
    # enable it at the second stage of the project
    # when the schema and tables plus initial data are almost clear
    # to enable you should disable defer-datasource-initialization and set ddl-auto: validate
    enabled: false
    change-log: classpath:/db/db.changelog-master.xml
